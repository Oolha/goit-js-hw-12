import{A as v,S,i}from"./assets/vendor-b41355b7.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))p(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&p(d)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function p(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const x=v.create({baseURL:"https://pixabay.com/api/",params:{key:"44419663-0e2c09df92781957132f7cc0f",image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15}});async function g(r,t){try{return(await x.get("",{params:{q:r,page:t}})).data}catch{iziToast.error({message:"Error!"})}}const q=document.querySelector(".image-list");function h(r){const t=r.map(s=>`
    <li class="images-item">
    <a class="large-img-link" href="${s.largeImageURL}">
    <img class="small-img-link" src="${s.webformatURL}" alt="${s.tags}"></img>
    <div class="image-box">
    <p class="img-list-item-text">Likes: ${s.likes}</p>
    <p class="img-list-item-text">Views: ${s.views}</p>
    <p class="img-list-item-text">Comments: ${s.comments}</p>
    <p class="img-list-item-text">Downloads: ${s.downloads}</p>
    </div>
        </a>
    </li>`).join("");return q.insertAdjacentHTML("beforeend",t),t}const E=document.querySelector(".form-js"),$=document.querySelector(".input-js"),y=document.querySelector(".image-list"),L=document.querySelector(".loader"),m=document.querySelector(".btn-load-more");let n="",a=1,l=1;const P=15;let b=new S(".image-list a",{captions:!0,captionsData:"alt",captionPosition:"bottom",captionDelay:250});E.addEventListener("submit",async r=>{if(r.preventDefault(),n=$.value.trim(),a=1,y.innerHTML="",w(),f(),n===""){i.warning({title:"Warning!",message:"Query must be field!",position:"topRight",backgroundColor:"#ef4040",layout:2}),c();return}try{const t=await g(n,a);if(l=Math.ceil(t.totalHits/P),l===0){i.error({title:"Empty result",message:"No images found!"}),c(),u();return}h(t.hits),b.refresh()}catch{i.error({message:"Error!"})}c(),u(),r.target.reset()});m.addEventListener("click",async()=>{a++,f(),w();try{const r=await g(n,a);h(r.hits),b.refresh(),O()}catch{i.error({message:"Error!"})}c(),u()});function u(){a>=l?(f(),l!==0&&i.info({message:"We're sorry, but you've reached the end of search results."})):M()}function M(){m.classList.remove("hidden")}function f(){m.classList.add("hidden")}function w(){L.classList.remove("hidden")}function c(){L.classList.add("hidden")}function O(){const r=y.querySelector(".images-item");if(r){const t=r.getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"})}}
//# sourceMappingURL=commonHelpers.js.map
